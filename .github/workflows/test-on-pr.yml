name: Run Test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - '**'

jobs:
  run-golden-record:
    runs-on: ubuntu-24.04

    env:
      CC: gcc
      CXX: g++
      FC: gfortran
      MPI_HOME: /usr

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3
        run: |
          sudo apt-get update -y
          sudo apt-get install -y -q --no-install-recommends python3-dev
          python -m pip install --upgrade pip
          pip install numpy

      - name: Install required packages
        run: |
          sudo apt update
          sudo apt install git cmake make ninja-build gcc g++ gfortran
          sudo apt install openmpi-bin openmpi-common libopenmpi-dev
          sudo apt install libopenblas-dev libsuitesparse-dev
          sudo apt install libfftw3-dev libgsl-dev libhdf5-dev libnetcdf-dev libnetcdff-dev

      - name: Clone test data
        id: data
        env:
          GITLAB_ACCESS_TOKEN: ${{ secrets.GITLAB_ACCESS_TOKEN }}
        run: |
          set -e

          TEMP_DIR=$(mktemp -d)
          cd $TEMP_DIR 

          if [ ! -d "data" ]; then
            echo "Fetching test data..."
            git clone https://oauth2:${GITLAB_ACCESS_TOKEN}@gitlab.tugraz.at/plasma/data.git
          fi

          cd data
          echo "data_dir=$(pwd)" >> $GITHUB_OUTPUT
          
      - name: Install libneo python required by NEO-2 python
        run: pip install git+https://github.com/itpplasma/libneo.git

      - name: Install NEO-2 python
        run: |
          cd python
          pip install -e .

      - name: Build NEO-2
        id: build
        run: |
          make
          echo "neo2_par=$(pwd)/build/NEO-2-PAR/neo_2_par.x" >> $GITHUB_OUTPUT
          echo "neo2_ql=$(pwd)/build/NEO-2-QL/neo_2_ql.x" >> $GITHUB_OUTPUT

      - name: Run golden record test
        env:
          CURRENT_NEO2_PAR: ${{ steps.build.outputs.neo2_par }}
          CURRENT_NEO2_QL: ${{ steps.build.outputs.neo2_ql }}
        id: run_test
        continue-on-error: true
        run: |
          set -e

          NEO2_BRANCH=${{ github.head_ref || github.ref_name }}
          TEST_DIR=TESTS/NEO-2/golden_record/

          cd ${{ steps.data.outputs.data_dir }}

          git fetch origin
          if git ls-remote --exit-code --heads origin "$NEO2_BRANCH" > /dev/null; then
            echo "Checking out $NEO2_BRANCH"
            git checkout "$NEO2_BRANCH"
          else
            echo "Branch '$NEO2_BRANCH' not found in data. Falling back to main"
            git checkout main
          fi

          git pull
          source activate.sh
          git config lfs.fetchinclude "$TEST_DIR"
          git config lfs.fetchexclude ""
          git lfs pull
          git lfs checkout "$TEST_DIR"
          cd "$TEST_DIR"
          echo "test_dir=$(pwd)" >> $GITHUB_OUTPUT

          make lorentz
          make ql

      - name: Upload test output on failure
        if: steps.run_test.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: golden-test-output
          path: |
            ${{ steps.run_test.outputs.test_dir }}/lorentz/current/summary.h5
            ${{ steps.run_test.outputs.test_dir }}/lorentz/current/out

      - name: Fail the job on test failure
        if: steps.run_test.outcome == 'failure'
        run: exit 1
