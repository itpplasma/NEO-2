# %%Standard Python modules
import numpy as np
from numpy.testing import assert_allclose
import matplotlib.pyplot as plt

# Custom modules
from libneo import FluxConverter, read_eqdsk

#Module to test
from neo2_mars import mars_sqrtspol2sqrtstor
from neo2_mars import get_profiles_mars
from neo2_mars import interpolate_profiles_to_same_grid
from neo2_mars import write_neo2_input_profiles_from_mars


test_sqrtspol = np.array([0, 0.0010, 0.0020, 0.0030, 0.0040, 0.0050, 0.0060, 0.0070, 0.0080, 0.0090, 0.0100, 0.0110, 0.0120, 0.0130, 0.0140, 0.0150, 0.0160, 0.0170, 0.0179, 0.0189, 0.0199, 0.0209, 0.0219, 0.0229, 0.0239, 0.0249, 0.0259, 0.0269, 0.0279, 0.0289, 0.0299, 0.0309, 0.0319, 0.0329, 0.0339, 0.0349, 0.0359, 0.0369, 0.0379, 0.0389, 0.0399, 0.0409, 0.0419, 0.0429, 0.0439, 0.0449, 0.0459, 0.0469, 0.0479, 0.0489, 0.0499, 0.0509, 0.0518, 0.0528, 0.0538, 0.0548, 0.0558, 0.0568, 0.0578, 0.0588, 0.0598, 0.0608, 0.0618, 0.0628, 0.0638, 0.0648, 0.0658, 0.0668, 0.0678, 0.0688, 0.0698, 0.0708, 0.0718, 0.0728, 0.0738, 0.0748, 0.0758, 0.0768, 0.0778, 0.0788, 0.0798, 0.0808, 0.0818, 0.0828, 0.0838, 0.0848, 0.0857, 0.0867, 0.0877, 0.0887, 0.0897, 0.0907, 0.0917, 0.0927, 0.0937, 0.0947, 0.0957, 0.0967, 0.0977, 0.0987, 0.0997, 0.1007, 0.1017, 0.1027, 0.1037, 0.1047, 0.1057, 0.1067, 0.1077, 0.1087, 0.1097, 0.1107, 0.1117, 0.1127, 0.1137, 0.1147, 0.1157, 0.1167, 0.1177, 0.1187, 0.1196, 0.1206, 0.1216, 0.1226, 0.1236, 0.1246, 0.1256, 0.1266, 0.1276, 0.1286, 0.1296, 0.1306, 0.1316, 0.1326, 0.1336, 0.1346, 0.1356, 0.1366, 0.1376, 0.1386, 0.1396, 0.1406, 0.1416, 0.1426, 0.1436, 0.1446, 0.1456, 0.1466, 0.1476, 0.1486, 0.1496, 0.1506, 0.1516, 0.1526, 0.1535, 0.1545, 0.1555, 0.1565, 0.1575, 0.1585, 0.1595, 0.1605, 0.1615, 0.1625, 0.1635, 0.1645, 0.1655, 0.1665, 0.1675, 0.1685, 0.1695, 0.1705, 0.1715, 0.1725, 0.1735, 0.1745, 0.1755, 0.1765, 0.1775, 0.1785, 0.1795, 0.1805, 0.1815, 0.1825, 0.1835, 0.1845, 0.1855, 0.1865, 0.1874, 0.1884, 0.1894, 0.1904, 0.1914, 0.1924, 0.1934, 0.1944, 0.1954, 0.1964, 0.1974, 0.1984, 0.1994, 0.2004, 0.2014, 0.2024, 0.2034, 0.2044, 0.2054, 0.2064, 0.2074, 0.2084, 0.2094, 0.2104, 0.2114, 0.2124, 0.2134, 0.2144, 0.2154, 0.2164, 0.2174, 0.2184, 0.2194, 0.2204, 0.2213, 0.2223, 0.2233, 0.2243, 0.2253, 0.2263, 0.2273, 0.2283, 0.2293, 0.2303, 0.2313, 0.2323, 0.2333, 0.2343, 0.2353, 0.2363, 0.2373, 0.2383, 0.2393, 0.2403, 0.2413, 0.2423, 0.2433, 0.2443, 0.2453, 0.2463, 0.2473, 0.2483, 0.2493, 
                           0.2503, 0.2513, 0.2523, 0.2533, 0.2543, 0.2552, 0.2562, 0.2572, 0.2582, 0.2592, 0.2602, 0.2612, 0.2622, 0.2632, 0.2642, 0.2652, 0.2662, 0.2672, 0.2682, 0.2692, 0.2702, 0.2712, 0.2722, 0.2732, 0.2742, 0.2752, 0.2762, 0.2772, 0.2782, 0.2792, 0.2802, 0.2812, 0.2822, 0.2832, 0.2842, 0.2852, 0.2862, 0.2872, 0.2882, 0.2891, 0.2901, 0.2911, 0.2921, 0.2931, 0.2941, 0.2951, 0.2961, 0.2971, 0.2981, 0.2991, 0.3001, 0.3011, 0.3021, 0.3031, 0.3041, 0.3051, 0.3061, 0.3071, 0.3081, 0.3091, 0.3101, 0.3111, 0.3121, 0.3131, 0.3141, 0.3151, 0.3161, 0.3171, 0.3181, 0.3191, 0.3201, 0.3211, 0.3221, 0.3230, 0.3240, 0.3250, 0.3260, 0.3270, 0.3280, 0.3290, 0.3300, 0.3310, 0.3320, 0.3330, 0.3340, 0.3350, 0.3360, 0.3370, 0.3380, 0.3390, 0.3400, 0.3410, 0.3420, 0.3430, 0.3440, 0.3450, 0.3460, 0.3470, 0.3480, 0.3490, 0.3500, 0.3510, 0.3520, 0.3530, 0.3540, 0.3550, 0.3560, 0.3570, 0.3579, 0.3589, 0.3599, 0.3609, 0.3619, 0.3629, 0.3639, 0.3649, 0.3659, 0.3669, 0.3679, 0.3689, 0.3699, 0.3709, 0.3719, 0.3729, 0.3739, 0.3749, 0.3759, 0.3769, 0.3779, 0.3789, 0.3799, 0.3809, 0.3819, 0.3829, 0.3839, 0.3849, 0.3859, 0.3869, 0.3879, 0.3889, 0.3899, 0.3909, 0.3918, 0.3928, 0.3938, 0.3948, 0.3958, 0.3968, 0.3978, 0.3988, 0.3998, 0.4008, 0.4018, 0.4028, 0.4038, 0.4048, 0.4058, 0.4068, 0.4078, 0.4088, 0.4098, 0.4108, 0.4118, 0.4128, 0.4138, 0.4148, 0.4158, 0.4168, 0.4178, 0.4188, 0.4198, 0.4208, 0.4218, 0.4228, 0.4238, 0.4248, 0.4257, 0.4267, 0.4277, 0.4287, 0.4297, 0.4307, 0.4317, 0.4327, 0.4337, 0.4347, 0.4357, 0.4367, 0.4377, 0.4387, 0.4397, 0.4407, 0.4417, 0.4427, 0.4437, 0.4447, 0.4457, 0.4467, 0.4477, 0.4487, 0.4497, 0.4507, 0.4517, 0.4527, 0.4537, 0.4547, 0.4557, 0.4567, 0.4577, 0.4587, 0.4596, 0.4606, 0.4616, 0.4626, 0.4636, 0.4646, 0.4656, 0.4666, 0.4676, 0.4686, 0.4696, 0.4706, 0.4716, 0.4726, 0.4736, 0.4746, 0.4756, 0.4766, 0.4776, 0.4786, 0.4796, 0.4806, 0.4816, 0.4826, 0.4836, 0.4846, 0.4856, 0.4866, 0.4876, 0.4886, 0.4896, 0.4906, 0.4916, 0.4926, 0.4935, 0.4945, 0.4955, 0.4965, 0.4975, 0.4985, 0.4995, 
                           0.5005, 0.5015, 0.5025, 0.5035, 0.5045, 0.5055, 0.5065, 0.5075, 0.5085, 0.5095, 0.5105, 0.5115, 0.5125, 0.5135, 0.5145, 0.5155, 0.5165, 0.5175, 0.5185, 0.5195, 0.5205, 0.5215, 0.5225, 0.5235, 0.5245, 0.5255, 0.5265, 0.5274, 0.5284, 0.5294, 0.5304, 0.5314, 0.5324, 0.5334, 0.5344, 0.5354, 0.5364, 0.5374, 0.5384, 0.5394, 0.5404, 0.5414, 0.5424, 0.5434, 0.5444, 0.5454, 0.5464, 0.5474, 0.5484, 0.5494, 0.5504, 0.5514, 0.5524, 0.5534, 0.5544, 0.5554, 0.5564, 0.5574, 0.5584, 0.5594, 0.5604, 0.5613, 0.5623, 0.5633, 0.5643, 0.5653, 0.5663, 0.5673, 0.5683, 0.5693, 0.5703, 0.5713, 0.5723, 0.5733, 0.5743, 0.5753, 0.5763, 0.5773, 0.5783, 0.5793, 0.5803, 0.5813, 0.5823, 0.5833, 0.5843, 0.5853, 0.5863, 0.5873, 0.5883, 0.5893, 0.5903, 0.5913, 0.5923, 0.5933, 0.5943, 0.5952, 0.5962, 0.5972, 0.5982, 0.5992, 0.6002, 0.6012, 0.6022, 0.6032, 0.6042, 0.6052, 0.6062, 0.6072, 0.6082, 0.6092, 0.6102, 0.6112, 0.6122, 0.6132, 0.6142, 0.6152, 0.6162, 0.6172, 0.6182, 0.6192, 0.6202, 0.6212, 0.6222, 0.6232, 0.6242, 0.6252, 0.6262, 0.6272, 0.6282, 0.6291, 0.6301, 0.6311, 0.6321, 0.6331, 0.6341, 0.6351, 0.6361, 0.6371, 0.6381, 0.6391, 0.6401, 0.6411, 0.6421, 0.6431, 0.6441, 0.6451, 0.6461, 0.6471, 0.6481, 0.6491, 0.6501, 0.6511, 0.6521, 0.6531, 0.6541, 0.6551, 0.6561, 0.6571, 0.6581, 0.6591, 0.6601, 0.6611, 0.6621, 0.6630, 0.6640, 0.6650, 0.6660, 0.6670, 0.6680, 0.6690, 0.6700, 0.6710, 0.6720, 0.6730, 0.6740, 0.6750, 0.6760, 0.6770, 0.6780, 0.6790, 0.6800, 0.6810, 0.6820, 0.6830, 0.6840, 0.6850, 0.6860, 0.6870, 0.6880, 0.6890, 0.6900, 0.6910, 0.6920, 0.6930, 0.6940, 0.6950, 0.6960, 0.6970, 0.6979, 0.6989, 0.6999, 0.7009, 0.7019, 0.7029, 0.7039, 0.7049, 0.7059, 0.7069, 0.7079, 0.7089, 0.7099, 0.7109, 0.7119, 0.7129, 0.7139, 0.7149, 0.7159, 0.7169, 0.7179, 0.7189, 0.7199, 0.7209, 0.7219, 0.7229, 0.7239, 0.7249, 0.7259, 0.7269, 0.7279, 0.7289, 0.7299, 0.7309, 0.7318, 0.7328, 0.7338, 0.7348, 0.7358, 0.7368, 0.7378, 0.7388, 0.7398, 0.7408, 0.7418, 0.7428, 0.7438, 0.7448, 0.7458, 0.7468, 0.7478, 0.7488, 0.7498, 
                           0.7508, 0.7518, 0.7528, 0.7538, 0.7548, 0.7558, 0.7568, 0.7578, 0.7588, 0.7598, 0.7608, 0.7618, 0.7628, 0.7638, 0.7648, 0.7657, 0.7667, 0.7677, 0.7687, 0.7697, 0.7707, 0.7717, 0.7727, 0.7737, 0.7747, 0.7757, 0.7767, 0.7777, 0.7787, 0.7797, 0.7807, 0.7817, 0.7827, 0.7837, 0.7847, 0.7857, 0.7867, 0.7877, 0.7887, 0.7897, 0.7907, 0.7917, 0.7927, 0.7937, 0.7947, 0.7957, 0.7967, 0.7977, 0.7987, 0.7996, 0.8006, 0.8016, 0.8026, 0.8036, 0.8046, 0.8056, 0.8066, 0.8076, 0.8086, 0.8096, 0.8106, 0.8116, 0.8126, 0.8136, 0.8146, 0.8156, 0.8166, 0.8176, 0.8186, 0.8196, 0.8206, 0.8216, 0.8226, 0.8236, 0.8246, 0.8256, 0.8266, 0.8276, 0.8286, 0.8296, 0.8306, 0.8316, 0.8326, 0.8335, 0.8345, 0.8355, 0.8365, 0.8375, 0.8385, 0.8395, 0.8405, 0.8415, 0.8425, 0.8435, 0.8445, 0.8455, 0.8465, 0.8475, 0.8485, 0.8495, 0.8505, 0.8515, 0.8525, 0.8535, 0.8545, 0.8555, 0.8565, 0.8575, 0.8585, 0.8595, 0.8605, 0.8615, 0.8625, 0.8635, 0.8645, 0.8655, 0.8665, 0.8674, 0.8684, 0.8694, 0.8704, 0.8714, 0.8724, 0.8734, 0.8744, 0.8754, 0.8764, 0.8774, 0.8784, 0.8794, 0.8804, 0.8814, 0.8824, 0.8834, 0.8844, 0.8854, 0.8864, 0.8874, 0.8884, 0.8894, 0.8904, 0.8914, 0.8924, 0.8934, 0.8944, 0.8954, 0.8964, 0.8974, 0.8984, 0.8994, 0.9004, 0.9013, 0.9023, 0.9033, 0.9043, 0.9053, 0.9063, 0.9073, 0.9083, 0.9093, 0.9103, 0.9113, 0.9123, 0.9133, 0.9143, 0.9153, 0.9163, 0.9173, 0.9183, 0.9193, 0.9203, 0.9213, 0.9223, 0.9233, 0.9243, 0.9253, 0.9263, 0.9273, 0.9283, 0.9293, 0.9303, 0.9313, 0.9323, 0.9333, 0.9343, 0.9352, 0.9362, 0.9372, 0.9382, 0.9392, 0.9402, 0.9412, 0.9422, 0.9432, 0.9442, 0.9452, 0.9462, 0.9472, 0.9482, 0.9492, 0.9502, 0.9512, 0.9522, 0.9532, 0.9542, 0.9552, 0.9562, 0.9572, 0.9582, 0.9592, 0.9602, 0.9612, 0.9622, 0.9632, 0.9642, 0.9652, 0.9662, 0.9672, 0.9682, 0.9691, 0.9701, 0.9711, 0.9721, 0.9731, 0.9741, 0.9751, 0.9761, 0.9771, 0.9781, 0.9791, 0.9801, 0.9811, 0.9821, 0.9831, 0.9841, 0.9851, 0.9861, 0.9871, 0.9881, 0.9891, 0.9901, 0.9911, 0.9921, 0.9931, 0.9941, 0.9951, 0.9961, 0.9971, 0.9981, 0.9991, 1.0000])
control_sqrtstor = np.array([0, 0.0008, 0.0016, 0.0024, 0.0032, 0.0040, 0.0048, 0.0056, 0.0064, 0.0071, 0.0079, 0.0087, 0.0095, 0.0103, 0.0111, 0.0118, 0.0126, 0.0134, 0.0142, 0.0150, 0.0157, 0.0165, 0.0173, 0.0180, 0.0188, 0.0196, 0.0204, 0.0211, 0.0219, 0.0227, 0.0234, 0.0242, 0.0249, 0.0257, 0.0265, 0.0272, 0.0280, 0.0287, 0.0295, 0.0303, 0.0310, 0.0318, 0.0325, 0.0333, 0.0340, 0.0348, 0.0355, 0.0363, 0.0370, 0.0378, 0.0385, 0.0393, 0.0400, 0.0408, 0.0415, 0.0423, 0.0430, 0.0437, 0.0445, 0.0452, 0.0460, 0.0467, 0.0474, 0.0482, 0.0489, 0.0497, 0.0504, 0.0511, 0.0519, 0.0526, 0.0534, 0.0541, 0.0548, 0.0556, 0.0563, 0.0570, 0.0578, 0.0585, 0.0592, 0.0600, 0.0607, 0.0614, 0.0621, 0.0629, 0.0636, 0.0643, 0.0651, 0.0658, 0.0665, 0.0673, 0.0680, 0.0687, 0.0694, 0.0702, 0.0709, 0.0716, 0.0724, 0.0731, 0.0738, 0.0745, 0.0753, 0.0760, 0.0767, 0.0774, 0.0782, 0.0789, 0.0796, 0.0803, 0.0811, 0.0818, 0.0825, 0.0832, 0.0840, 0.0847, 0.0854, 0.0861, 0.0869, 0.0876, 0.0883, 0.0890, 0.0898, 0.0905, 0.0912, 0.0919, 0.0927, 0.0934, 0.0941, 0.0948, 0.0956, 0.0963, 0.0970, 0.0977, 0.0984, 0.0992, 0.0999, 0.1006, 0.1013, 0.1021, 0.1028, 0.1035, 0.1042, 0.1050, 0.1057, 0.1064, 0.1071, 0.1079, 0.1086, 0.1093, 0.1100, 0.1108, 0.1115, 0.1122, 0.1130, 0.1137, 0.1144, 0.1151, 0.1159, 0.1166, 0.1173, 0.1180, 0.1188, 0.1195, 0.1202, 0.1210, 0.1217, 0.1224, 0.1231, 0.1239, 0.1246, 0.1253, 0.1261, 0.1268, 0.1275, 0.1283, 0.1290, 0.1297, 0.1304, 0.1312, 0.1319, 0.1326, 0.1334, 0.1341, 0.1348, 0.1356, 0.1363, 0.1370, 0.1378, 0.1385, 0.1392, 0.1400, 0.1407, 0.1415, 0.1422, 0.1429, 0.1437, 0.1444, 0.1451, 0.1459, 0.1466, 0.1474, 0.1481, 0.1488, 0.1496, 0.1503, 0.1511, 0.1518, 0.1525, 0.1533, 0.1540, 0.1548, 0.1555, 0.1562, 0.1570, 0.1577, 0.1585, 0.1592, 0.1600, 0.1607, 0.1615, 0.1622, 0.1630, 0.1637, 0.1644, 0.1652, 0.1659, 0.1667, 0.1674, 0.1682, 0.1689, 0.1697, 0.1704, 0.1712, 0.1719, 0.1727, 0.1734, 0.1742, 0.1749, 0.1757, 0.1765, 0.1772, 0.1780, 0.1787, 0.1795, 0.1802, 0.1810, 0.1817, 0.1825, 0.1833, 0.1840, 0.1848, 0.1855, 0.1863, 0.1870, 0.1878, 0.1886, 0.1893, 0.1901, 0.1908, 0.1916, 0.1924, 0.1931, 0.1939, 0.1947, 0.1954, 0.1962, 0.1970, 0.1977, 0.1985, 0.1993, 0.2000, 0.2008, 0.2016, 0.2023, 0.2031, 0.2039, 0.2046, 0.2054, 0.2062, 0.2069, 0.2077, 0.2085, 0.2093, 0.2100, 0.2108, 0.2116, 0.2123, 0.2131, 0.2139, 0.2147, 0.2154, 0.2162, 0.2170, 0.2178, 0.2185, 0.2193, 0.2201, 0.2209, 0.2217, 0.2224, 0.2232, 0.2240, 0.2248, 0.2256, 0.2263, 0.2271, 0.2279, 0.2287, 0.2295, 0.2302, 0.2310, 0.2318, 0.2326, 0.2334, 0.2342, 0.2350, 0.2357, 0.2365, 0.2373, 0.2381, 0.2389, 0.2397, 0.2405, 0.2413, 0.2420, 0.2428, 0.2436, 0.2444, 0.2452, 0.2460, 0.2468, 0.2476, 0.2484, 0.2492, 
                              0.2500, 0.2507, 0.2515, 0.2523, 0.2531, 0.2539, 0.2547, 0.2555, 0.2563, 0.2571, 0.2579, 0.2587, 0.2595, 0.2603, 0.2611, 0.2619, 0.2627, 0.2635, 0.2643, 0.2651, 0.2659, 0.2667, 0.2675, 0.2683, 0.2691, 0.2699, 0.2707, 0.2715, 0.2723, 0.2731, 0.2739, 0.2747, 0.2755, 0.2763, 0.2771, 0.2779, 0.2787, 0.2795, 0.2804, 0.2812, 0.2820, 0.2828, 0.2836, 0.2844, 0.2852, 0.2860, 0.2868, 0.2876, 0.2884, 0.2892, 0.2901, 0.2909, 0.2917, 0.2925, 0.2933, 0.2941, 0.2949, 0.2957, 0.2965, 0.2974, 0.2982, 0.2990, 0.2998, 0.3006, 0.3014, 0.3022, 0.3031, 0.3039, 0.3047, 0.3055, 0.3063, 0.3071, 0.3080, 0.3088, 0.3096, 0.3104, 0.3112, 0.3120, 0.3129, 0.3137, 0.3145, 0.3153, 0.3161, 0.3170, 0.3178, 0.3186, 0.3194, 0.3202, 0.3211, 0.3219, 0.3227, 0.3235, 0.3243, 0.3252, 0.3260, 0.3268, 0.3276, 0.3285, 0.3293, 0.3301, 0.3309, 0.3318, 0.3326, 0.3334, 0.3342, 0.3351, 0.3359, 0.3367, 0.3375, 0.3384, 0.3392, 0.3400, 0.3408, 0.3417, 0.3425, 0.3433, 0.3442, 0.3450, 0.3458, 0.3466, 0.3475, 0.3483, 0.3491, 0.3500, 0.3508, 0.3516, 0.3524, 0.3533, 0.3541, 0.3549, 0.3558, 0.3566, 0.3574, 0.3583, 0.3591, 0.3599, 0.3608, 0.3616, 0.3624, 0.3633, 0.3641, 0.3649, 0.3658, 0.3666, 0.3674, 0.3683, 0.3691, 0.3699, 0.3708, 0.3716, 0.3724, 0.3733, 0.3741, 0.3749, 0.3758, 0.3766, 0.3774, 0.3783, 0.3791, 0.3800, 0.3808, 0.3816, 0.3825, 0.3833, 0.3841, 0.3850, 0.3858, 0.3867, 0.3875, 0.3883, 0.3892, 0.3900, 0.3909, 0.3917, 0.3925, 0.3934, 0.3942, 0.3951, 0.3959, 0.3967, 0.3976, 0.3984, 0.3993, 0.4001, 0.4010, 0.4018, 0.4026, 0.4035, 0.4043, 0.4052, 0.4060, 0.4069, 0.4077, 0.4086, 0.4094, 0.4102, 0.4111, 0.4119, 0.4128, 0.4136, 0.4145, 0.4153, 0.4162, 0.4170, 0.4179, 0.4187, 0.4196, 0.4204, 0.4213, 0.4221, 0.4230, 0.4238, 0.4247, 0.4255, 0.4264, 0.4272, 0.4281, 0.4289, 0.4298, 0.4306, 0.4315, 0.4323, 0.4332, 0.4340, 0.4349, 0.4357, 0.4366, 0.4374, 0.4383, 0.4391, 0.4400, 0.4409, 0.4417, 0.4426, 0.4434, 0.4443, 0.4451, 0.4460, 0.4468, 0.4477, 0.4486, 0.4494, 0.4503, 0.4511, 0.4520, 0.4529, 0.4537, 0.4546, 0.4554, 0.4563, 0.4572, 0.4580, 0.4589, 0.4598, 0.4606, 0.4615, 0.4623, 0.4632, 0.4641, 0.4649, 0.4658, 0.4667, 0.4675, 0.4684, 0.4693, 0.4701, 0.4710, 0.4719, 0.4728, 0.4736, 0.4745, 0.4754, 0.4762, 0.4771, 0.4780, 0.4789, 0.4797, 0.4806, 0.4815, 0.4824, 0.4832, 0.4841, 0.4850, 0.4859, 0.4867, 0.4876, 0.4885, 0.4894, 0.4903, 0.4911, 0.4920, 0.4929, 0.4938, 0.4947, 0.4955, 0.4964, 0.4973, 0.4982, 0.4991, 
                              0.5000, 0.5009, 0.5017, 0.5026, 0.5035, 0.5044, 0.5053, 0.5062, 0.5071, 0.5080, 0.5089, 0.5098, 0.5107, 0.5116, 0.5125, 0.5134, 0.5143, 0.5152, 0.5161, 0.5170, 0.5179, 0.5188, 0.5197, 0.5206, 0.5215, 0.5224, 0.5233, 0.5242, 0.5251, 0.5260, 0.5269, 0.5278, 0.5287, 0.5296, 0.5306, 0.5315, 0.5324, 0.5333, 0.5342, 0.5351, 0.5361, 0.5370, 0.5379, 0.5388, 0.5397, 0.5407, 0.5416, 0.5425, 0.5435, 0.5444, 0.5453, 0.5462, 0.5472, 0.5481, 0.5490, 0.5500, 0.5509, 0.5518, 0.5528, 0.5537, 0.5547, 0.5556, 0.5566, 0.5575, 0.5584, 0.5594, 0.5603, 0.5613, 0.5622, 0.5632, 0.5641, 0.5651, 0.5661, 0.5670, 0.5680, 0.5689, 0.5699, 0.5709, 0.5718, 0.5728, 0.5737, 0.5747, 0.5757, 0.5767, 0.5776, 0.5786, 0.5796, 0.5806, 0.5815, 0.5825, 0.5835, 0.5845, 0.5855, 0.5865, 0.5874, 0.5884, 0.5894, 0.5904, 0.5914, 0.5924, 0.5934, 0.5944, 0.5954, 0.5964, 0.5974, 0.5984, 0.5994, 0.6004, 0.6015, 0.6025, 0.6035, 0.6045, 0.6055, 0.6065, 0.6076, 0.6086, 0.6096, 0.6107, 0.6117, 0.6127, 0.6138, 0.6148, 0.6158, 0.6169, 0.6179, 0.6190, 0.6200, 0.6211, 0.6221, 0.6232, 0.6242, 0.6253, 0.6263, 0.6274, 0.6285, 0.6295, 0.6306, 0.6317, 0.6328, 0.6338, 0.6349, 0.6360, 0.6371, 0.6382, 0.6393, 0.6404, 0.6414, 0.6425, 0.6436, 0.6447, 0.6458, 0.6470, 0.6481, 0.6492, 0.6503, 0.6514, 0.6525, 0.6537, 0.6548, 0.6559, 0.6570, 0.6582, 0.6593, 0.6604, 0.6616, 0.6627, 0.6639, 0.6650, 0.6662, 0.6673, 0.6685, 0.6697, 0.6708, 0.6720, 0.6732, 0.6743, 0.6755, 0.6767, 0.6779, 0.6791, 0.6803, 0.6815, 0.6827, 0.6839, 0.6851, 0.6863, 0.6875, 0.6887, 0.6899, 0.6911, 0.6924, 0.6936, 0.6948, 0.6960, 0.6973, 0.6985, 0.6998, 0.7010, 0.7023, 0.7035, 0.7048, 0.7061, 0.7073, 0.7086, 0.7099, 0.7111, 0.7124, 0.7137, 0.7150, 0.7163, 0.7176, 0.7189, 0.7202, 0.7215, 0.7228, 0.7241, 0.7255, 0.7268, 0.7281, 0.7295, 0.7308, 0.7321, 0.7335, 0.7348, 0.7362, 0.7375, 0.7389, 0.7403, 0.7417, 0.7430, 0.7444, 0.7458, 0.7472, 0.7486, 0.7500, 
                              0.7514, 0.7528, 0.7542, 0.7556, 0.7571, 0.7585, 0.7599, 0.7614, 0.7628, 0.7643, 0.7657, 0.7672, 0.7686, 0.7701, 0.7716, 0.7730, 0.7745, 0.7760, 0.7775, 0.7790, 0.7805, 0.7820, 0.7835, 0.7851, 0.7866, 0.7881, 0.7896, 0.7912, 0.7927, 0.7943, 0.7958, 0.7974, 0.7990, 0.8006, 0.8021, 0.8037, 0.8053, 0.8069, 0.8085, 0.8101, 0.8117, 0.8134, 0.8150, 0.8166, 0.8183, 0.8199, 0.8216, 0.8232, 0.8249, 0.8265, 0.8282, 0.8299, 0.8316, 0.8333, 0.8350, 0.8367, 0.8384, 0.8401, 0.8419, 0.8436, 0.8453, 0.8471, 0.8488, 0.8506, 0.8524, 0.8542, 0.8559, 0.8577, 0.8595, 0.8613, 0.8631, 0.8649, 0.8668, 0.8686, 0.8704, 0.8723, 0.8741, 0.8760, 0.8779, 0.8797, 0.8816, 0.8835, 0.8854, 0.8873, 0.8892, 0.8911, 0.8931, 0.8950, 0.8969, 0.8989, 0.9009, 0.9028, 0.9048, 0.9068, 0.9088, 0.9108, 0.9128, 0.9148, 0.9168, 0.9188, 0.9209, 0.9229, 0.9250, 0.9270, 0.9291, 0.9312, 0.9333, 0.9354, 0.9375, 0.9396, 0.9417, 0.9439, 0.9460, 0.9482, 0.9503, 0.9525, 0.9547, 0.9568, 0.9590, 0.9612, 0.9635, 0.9657, 0.9679, 0.9701, 0.9724, 0.9747, 0.9769, 0.9792, 0.9815, 0.9838, 0.9861, 0.9884, 0.9907, 0.9931, 0.9954, 0.9978, 1.0000])

test_mars_dir = "/proj/plasma/DATA/DEMO/MARS/MARSQ_INPUTS_KNTV21_NEO2profs_RUN/"
# The mars folder has the following equilibrium file as basis
test_eqdsk_file = '/proj/plasma/DATA/DEMO/teams/Equilibrium_DEMO2019_CHEASE/MOD_Qprof_Test/EQDSK_DEMO2019_q1_COCOS_02.OUT'

def test_mars_sqrtspol2sqrtstor():

    q_over_spol_eqdsk = read_eqdsk(test_eqdsk_file)['qprof']
    converter = FluxConverter(q_over_spol_eqdsk)
    result_sqrtstor_eqdsk = np.sqrt(converter.spol2stor(test_sqrtspol**2))

    result_sqrtstor_mars = mars_sqrtspol2sqrtstor(test_mars_dir, test_sqrtspol)
    assert np.allclose(result_sqrtstor_eqdsk, result_sqrtstor_mars, atol=1e-4)

def test_mars_sqrtspol2sqrtstor_visual_check():
    q_over_spol_eqdsk = read_eqdsk(test_eqdsk_file)['qprof']
    converter = FluxConverter(q_over_spol_eqdsk)
    result_sqrtstor_eqdsk = np.sqrt(converter.spol2stor(test_sqrtspol**2))
    result_sqrtstor_mars = mars_sqrtspol2sqrtstor(test_mars_dir, test_sqrtspol)

    plt.figure()
    plt.plot(test_sqrtspol, control_sqrtstor, 'ob', label='control')
    plt.plot(test_sqrtspol, result_sqrtstor_eqdsk, '-r', label='libneo spol2stor on eqdsk')
    plt.plot(test_sqrtspol, result_sqrtstor_mars, '--y', label='mars_sqrtspol2sqrtstor')
    plt.xlabel(r'$\sqrt{s_\mathrm{pol}}$')
    plt.ylabel(r'$\sqrt{s_\mathrm{tor}}$')
    plt.legend()
    plt.show()

def test_mars_profiles_size():
    mars_profiles = get_profiles_mars(test_mars_dir)
    for key, profile in mars_profiles.items():
        assert profile.shape[0] == 200
        assert profile.shape[1] == 2

def test_mars_profiles_sqrtstor():
    mars_profiles = get_profiles_mars(test_mars_dir)
    sqrtspol = mars_profiles['sqrtstor'][:,0]
    sqrtstor = mars_profiles['sqrtstor'][:,1]
    assert np.allclose(sqrtstor, mars_sqrtspol2sqrtstor(test_mars_dir, sqrtspol), atol=1e-4)

def test_mars_profiles_sqrtspol_grid():
    mars_profiles = get_profiles_mars(test_mars_dir)
    for kind in mars_profiles.keys():
        sqrtspol = mars_profiles[kind][:,0]
        assert np.min(sqrtspol) == 0
        assert np.max(sqrtspol) == 1
        assert is_monotonic(sqrtspol)

def is_monotonic(x):
    return np.all(np.diff(x) >= 0)

def test_mars_profiles_visual_check():
    mars_profiles = get_profiles_mars(test_mars_dir)
    fig, ax = plt.subplots(int(np.ceil(len(mars_profiles)/2)), 2)
    for i, (key, profile) in enumerate(mars_profiles.items()):
        ax[i//2, i%2].plot(profile[:,0], profile[:,1], '-r')
        ax[i//2, i%2].set_xlabel(r'$\sqrt{s_\mathrm{pol}}$')
        ax[i//2, i%2].set_ylabel(key)
    plt.subplots_adjust(wspace=0.5, hspace=0.6)

def test_interpolate_profiles_to_same_grid():
    profiles_on_same_grid = get_profiles_mars(test_mars_dir)
    interp_profiles = interpolate_profiles_to_same_grid(profiles_on_same_grid)
    assert is_same_grid_for_all(interp_profiles)
    assert is_same_for_all_entries(profiles_on_same_grid, interp_profiles)

def is_same_grid_for_all(profiles):
    for key, profile in profiles.items():
        if not np.allclose(profile[:,0], profiles['sqrtstor'][:,0]):
            return False
    return True

def is_same_for_all_entries(profiles1, profiles2):
    for key, profile in profiles1.items():
        if not np.allclose(profiles1[key][:,1], profiles2[key][:,1], atol=1e-4):
            return False
    return True

def test_write_neo2_input_profile_from_mars():
    write_neo2_input_profiles_from_mars(test_mars_dir, '/tmp/')
    mars_profiles = get_profiles_mars(test_mars_dir)
    for key, profile in mars_profiles.items():
        neo2_profile = np.loadtxt(f'/tmp/{key}.dat')
        assert np.allclose(profile, neo2_profile, atol=1e-4)

def test_write_neo2_input_profile_from_mars_visual_check():
    write_neo2_input_profiles_from_mars(test_mars_dir, '/tmp/')
    mars_profiles = get_profiles_mars(test_mars_dir)
    fig, ax = plt.subplots(int(np.ceil(len(mars_profiles)/2)), 2)
    for i, (key, profile) in enumerate(mars_profiles.items()):
        neo2_profile = np.loadtxt(f'/tmp/{key}.dat')
        ax[i//2, i%2].plot(profile[:,0], profile[:,1], '-r', label='MARS')
        ax[i//2, i%2].plot(neo2_profile[:,0], neo2_profile[:,1], '--b', label='NEO2')
        ax[i//2, i%2].set_xlabel(r'$\sqrt{s_\mathrm{pol}}$')
        ax[i//2, i%2].set_ylabel(key)
        ax[i//2, i%2].legend()
    plt.subplots_adjust(wspace=0.5, hspace=0.6)

if __name__ == "__main__":
    test_mars_sqrtspol2sqrtstor()
    test_mars_profiles_size()
    test_mars_profiles_sqrtstor()
    test_interpolate_profiles_to_same_grid()
    test_write_neo2_input_profile_from_mars()
    print("All tests passed!")
    test_mars_sqrtspol2sqrtstor_visual_check()
    test_mars_profiles_visual_check()
    test_write_neo2_input_profile_from_mars_visual_check()